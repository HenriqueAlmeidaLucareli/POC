name: Tests

#############################
# Start the job on all push #
#############################
on: [push, pull_request]

jobs:
  tests:
    name: Python ${{ matrix.python-version }} Flask ${{ matrix.flask-version }}
    runs-on: ubuntu-20.04
    environment: test

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        flask-version: ["2.3.2", "3.0.0"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pipenv
          python --version; pip --version; pipenv --version
          pipenv run pip install flask==${{ matrix.flask-version }}
      - name: Run tests
        run: |
          make check
          make test
        env:
          RANDOM_SEED: 0

      - name: Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: srv-crlk4mbv2p9s73fourbg # trocar: esta em Deploy hook
          api-key: rnd_dAytgHrg67qJUXjGjiRTBBJBUEjG #trocar: em criar chave      
        
      - name: Deploy no EC2 -AWS
        run: |
          echo "Conectando no EC2"
          echo "${{secrets.AWS_CHAVE_PIPELINE_AWS_PEM}}" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@"${{secrets.ssh_ubuntu}}" "
          cd POC/;git pull;cd cd flask-api_methods-develop/;python_flask/;./executar.sh"